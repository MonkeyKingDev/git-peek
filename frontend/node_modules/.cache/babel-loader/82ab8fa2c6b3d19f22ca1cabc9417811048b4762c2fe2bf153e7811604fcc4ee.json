{"ast":null,"code":"var _jsxFileName = \"/Users/ayush/Desktop/Projects/github-code-visualise/frontend/src/contexts/AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { apiCall } from '../utils/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport function useAuth() {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n}\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport function AuthProvider({\n  children\n}) {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [sessionId, setSessionId] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const sessionFromUrl = urlParams.get('session');\n    console.log('AuthContext useEffect - sessionFromUrl:', sessionFromUrl);\n    console.log('AuthContext useEffect - current URL:', window.location.href);\n\n    // Listen for OAuth success messages from popup\n    const handleMessage = event => {\n      console.log('Received message:', event);\n      if (event.origin !== 'http://localhost:8000') return;\n      if (event.data.type === 'OAUTH_SUCCESS') {\n        console.log('OAuth success message received:', event.data);\n        setSessionId(event.data.sessionId);\n        window.history.replaceState({}, document.title, '/dashboard');\n        checkSession(event.data.sessionId);\n      }\n    };\n    window.addEventListener('message', handleMessage);\n    if (sessionFromUrl) {\n      console.log('Setting session from URL:', sessionFromUrl);\n      setSessionId(sessionFromUrl);\n      window.history.replaceState({}, document.title, window.location.pathname);\n      checkSession(sessionFromUrl);\n    } else {\n      const savedSession = localStorage.getItem('github_session');\n      console.log('No session in URL, checking localStorage:', savedSession);\n      if (savedSession) {\n        setSessionId(savedSession);\n        checkSession(savedSession);\n      } else {\n        setLoading(false);\n      }\n    }\n    return () => {\n      window.removeEventListener('message', handleMessage);\n    };\n  }, []);\n  const checkSession = async session => {\n    console.log('checkSession called with:', session);\n    try {\n      console.log('Making API call to validate session...');\n      const userData = await apiCall(`/auth/user?session_id=${session}`);\n      console.log('Session validation successful, user data:', userData);\n      setUser(userData);\n      localStorage.setItem('github_session', session);\n      setLoading(false);\n    } catch (error) {\n      console.error('Session validation failed:', error);\n      localStorage.removeItem('github_session');\n      setSessionId(null);\n      setUser(null);\n      setLoading(false);\n    }\n  };\n  const login = async () => {\n    try {\n      const response = await apiCall('/auth/login');\n      window.location.href = response.auth_url;\n    } catch (error) {\n      console.error('Login failed:', error);\n      throw error;\n    }\n  };\n  const logout = async () => {\n    try {\n      if (sessionId) {\n        await apiCall('/auth/logout', 'POST', {\n          session_id: sessionId\n        });\n      }\n    } catch (error) {\n      console.error('Logout error:', error);\n    } finally {\n      localStorage.removeItem('github_session');\n      setSessionId(null);\n      setUser(null);\n    }\n  };\n  const value = {\n    user,\n    sessionId,\n    login,\n    logout,\n    loading,\n    isAuthenticated: !!user && !!sessionId\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n}\n_s2(AuthProvider, \"WJnUFu+K2GVQEmdUlvSFjceHgzE=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","apiCall","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","sessionId","setSessionId","loading","setLoading","urlParams","URLSearchParams","window","location","search","sessionFromUrl","get","console","log","href","handleMessage","event","origin","data","type","history","replaceState","document","title","checkSession","addEventListener","pathname","savedSession","localStorage","getItem","removeEventListener","session","userData","setItem","error","removeItem","login","response","auth_url","logout","session_id","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ayush/Desktop/Projects/github-code-visualise/frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { apiCall } from '../utils/api';\n\nconst AuthContext = createContext();\n\nexport function useAuth() {\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n}\n\nexport function AuthProvider({ children }) {\n  const [user, setUser] = useState(null);\n  const [sessionId, setSessionId] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const urlParams = new URLSearchParams(window.location.search);\n    const sessionFromUrl = urlParams.get('session');\n    \n    console.log('AuthContext useEffect - sessionFromUrl:', sessionFromUrl);\n    console.log('AuthContext useEffect - current URL:', window.location.href);\n    \n    // Listen for OAuth success messages from popup\n    const handleMessage = (event) => {\n      console.log('Received message:', event);\n      if (event.origin !== 'http://localhost:8000') return;\n      \n      if (event.data.type === 'OAUTH_SUCCESS') {\n        console.log('OAuth success message received:', event.data);\n        setSessionId(event.data.sessionId);\n        window.history.replaceState({}, document.title, '/dashboard');\n        checkSession(event.data.sessionId);\n      }\n    };\n    \n    window.addEventListener('message', handleMessage);\n    \n    if (sessionFromUrl) {\n      console.log('Setting session from URL:', sessionFromUrl);\n      setSessionId(sessionFromUrl);\n      window.history.replaceState({}, document.title, window.location.pathname);\n      checkSession(sessionFromUrl);\n    } else {\n      const savedSession = localStorage.getItem('github_session');\n      console.log('No session in URL, checking localStorage:', savedSession);\n      if (savedSession) {\n        setSessionId(savedSession);\n        checkSession(savedSession);\n      } else {\n        setLoading(false);\n      }\n    }\n    \n    return () => {\n      window.removeEventListener('message', handleMessage);\n    };\n  }, []);\n\n  const checkSession = async (session) => {\n    console.log('checkSession called with:', session);\n    try {\n      console.log('Making API call to validate session...');\n      const userData = await apiCall(`/auth/user?session_id=${session}`);\n      console.log('Session validation successful, user data:', userData);\n      setUser(userData);\n      localStorage.setItem('github_session', session);\n      setLoading(false);\n    } catch (error) {\n      console.error('Session validation failed:', error);\n      localStorage.removeItem('github_session');\n      setSessionId(null);\n      setUser(null);\n      setLoading(false);\n    }\n  };\n\n  const login = async () => {\n    try {\n      const response = await apiCall('/auth/login');\n      window.location.href = response.auth_url;\n    } catch (error) {\n      console.error('Login failed:', error);\n      throw error;\n    }\n  };\n\n  const logout = async () => {\n    try {\n      if (sessionId) {\n        await apiCall('/auth/logout', 'POST', { session_id: sessionId });\n      }\n    } catch (error) {\n      console.error('Logout error:', error);\n    } finally {\n      localStorage.removeItem('github_session');\n      setSessionId(null);\n      setUser(null);\n    }\n  };\n\n  const value = {\n    user,\n    sessionId,\n    login,\n    logout,\n    loading,\n    isAuthenticated: !!user && !!sessionId\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}