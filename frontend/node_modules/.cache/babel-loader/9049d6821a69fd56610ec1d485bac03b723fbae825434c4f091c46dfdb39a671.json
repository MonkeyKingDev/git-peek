{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect, useRef, useCallback } from 'react';\nexport const useSSE = (url, options = {}) => {\n  _s();\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n  const [isConnected, setIsConnected] = useState(false);\n  const eventSourceRef = useRef(null);\n  const dataRef = useRef({});\n  const connect = useCallback(() => {\n    if (eventSourceRef.current) {\n      eventSourceRef.current.close();\n    }\n    try {\n      const eventSource = new EventSource(url);\n      eventSourceRef.current = eventSource;\n      eventSource.onopen = () => {\n        setIsConnected(true);\n        setError(null);\n        if (options.onOpen) options.onOpen();\n      };\n      eventSource.onmessage = event => {\n        try {\n          const parsedData = JSON.parse(event.data);\n          if (options.onMessage) {\n            options.onMessage(parsedData);\n          }\n\n          // Handle different message types\n          switch (parsedData.type) {\n            case 'progress':\n              if (options.onProgress) {\n                options.onProgress(parsedData);\n              }\n              break;\n            case 'repository':\n              dataRef.current.repository = parsedData.data;\n              setData({\n                ...dataRef.current\n              });\n              break;\n            case 'contributors':\n              dataRef.current.contributors = parsedData.data;\n              setData({\n                ...dataRef.current\n              });\n              break;\n            case 'pull_requests':\n              dataRef.current.pull_requests = parsedData.data;\n              setData({\n                ...dataRef.current\n              });\n              break;\n            case 'commits_chunk':\n              if (!dataRef.current.commits) {\n                dataRef.current.commits = [];\n              }\n              dataRef.current.commits = dataRef.current.commits.concat(parsedData.data);\n              dataRef.current.total_commits = parsedData.total_so_far;\n              setData({\n                ...dataRef.current\n              });\n              break;\n            case 'detailed_commits_chunk':\n              if (!dataRef.current.detailed_commits) {\n                dataRef.current.detailed_commits = [];\n              }\n              dataRef.current.detailed_commits = dataRef.current.detailed_commits.concat(parsedData.data);\n              dataRef.current.total_detailed_commits = parsedData.total_so_far;\n              setData({\n                ...dataRef.current\n              });\n              break;\n            case 'analysis_complete':\n              dataRef.current.analysis = parsedData.data;\n              setData({\n                ...dataRef.current\n              });\n              if (options.onComplete) {\n                options.onComplete(parsedData.data);\n              }\n              break;\n            case 'error':\n              setError(parsedData.message);\n              if (options.onError) {\n                options.onError(parsedData.message);\n              }\n              break;\n            default:\n              break;\n          }\n        } catch (parseError) {\n          console.error('Failed to parse SSE data:', parseError);\n          setError('Failed to parse server response');\n        }\n      };\n      eventSource.onerror = event => {\n        setIsConnected(false);\n        setError('Connection error occurred');\n        if (options.onError) {\n          options.onError('Connection error occurred');\n        }\n      };\n    } catch (connectionError) {\n      setError('Failed to establish connection');\n      setIsConnected(false);\n    }\n  }, [url, options]);\n  const disconnect = useCallback(() => {\n    if (eventSourceRef.current) {\n      eventSourceRef.current.close();\n      eventSourceRef.current = null;\n      setIsConnected(false);\n    }\n  }, []);\n  const reset = useCallback(() => {\n    setData(null);\n    setError(null);\n    dataRef.current = {};\n  }, []);\n  useEffect(() => {\n    return () => {\n      disconnect();\n    };\n  }, [disconnect]);\n  return {\n    data,\n    error,\n    isConnected,\n    connect,\n    disconnect,\n    reset\n  };\n};\n_s(useSSE, \"z3Ri6zioCPlau9wiVMx5jSAlmaU=\");","map":{"version":3,"names":["useState","useEffect","useRef","useCallback","useSSE","url","options","_s","data","setData","error","setError","isConnected","setIsConnected","eventSourceRef","dataRef","connect","current","close","eventSource","EventSource","onopen","onOpen","onmessage","event","parsedData","JSON","parse","onMessage","type","onProgress","repository","contributors","pull_requests","commits","concat","total_commits","total_so_far","detailed_commits","total_detailed_commits","analysis","onComplete","message","onError","parseError","console","onerror","connectionError","disconnect","reset"],"sources":["/Users/ayush/Desktop/Projects/github-code-visualise/frontend/src/hooks/useSSE.js"],"sourcesContent":["import { useState, useEffect, useRef, useCallback } from 'react';\n\nexport const useSSE = (url, options = {}) => {\n  const [data, setData] = useState(null);\n  const [error, setError] = useState(null);\n  const [isConnected, setIsConnected] = useState(false);\n  const eventSourceRef = useRef(null);\n  const dataRef = useRef({});\n\n  const connect = useCallback(() => {\n    if (eventSourceRef.current) {\n      eventSourceRef.current.close();\n    }\n\n    try {\n      const eventSource = new EventSource(url);\n      eventSourceRef.current = eventSource;\n\n      eventSource.onopen = () => {\n        setIsConnected(true);\n        setError(null);\n        if (options.onOpen) options.onOpen();\n      };\n\n      eventSource.onmessage = (event) => {\n        try {\n          const parsedData = JSON.parse(event.data);\n          \n          if (options.onMessage) {\n            options.onMessage(parsedData);\n          }\n\n          // Handle different message types\n          switch (parsedData.type) {\n            case 'progress':\n              if (options.onProgress) {\n                options.onProgress(parsedData);\n              }\n              break;\n              \n            case 'repository':\n              dataRef.current.repository = parsedData.data;\n              setData({ ...dataRef.current });\n              break;\n              \n            case 'contributors':\n              dataRef.current.contributors = parsedData.data;\n              setData({ ...dataRef.current });\n              break;\n              \n            case 'pull_requests':\n              dataRef.current.pull_requests = parsedData.data;\n              setData({ ...dataRef.current });\n              break;\n              \n            case 'commits_chunk':\n              if (!dataRef.current.commits) {\n                dataRef.current.commits = [];\n              }\n              dataRef.current.commits = dataRef.current.commits.concat(parsedData.data);\n              dataRef.current.total_commits = parsedData.total_so_far;\n              setData({ ...dataRef.current });\n              break;\n              \n            case 'detailed_commits_chunk':\n              if (!dataRef.current.detailed_commits) {\n                dataRef.current.detailed_commits = [];\n              }\n              dataRef.current.detailed_commits = dataRef.current.detailed_commits.concat(parsedData.data);\n              dataRef.current.total_detailed_commits = parsedData.total_so_far;\n              setData({ ...dataRef.current });\n              break;\n              \n            case 'analysis_complete':\n              dataRef.current.analysis = parsedData.data;\n              setData({ ...dataRef.current });\n              if (options.onComplete) {\n                options.onComplete(parsedData.data);\n              }\n              break;\n              \n            case 'error':\n              setError(parsedData.message);\n              if (options.onError) {\n                options.onError(parsedData.message);\n              }\n              break;\n              \n            default:\n              break;\n          }\n        } catch (parseError) {\n          console.error('Failed to parse SSE data:', parseError);\n          setError('Failed to parse server response');\n        }\n      };\n\n      eventSource.onerror = (event) => {\n        setIsConnected(false);\n        setError('Connection error occurred');\n        if (options.onError) {\n          options.onError('Connection error occurred');\n        }\n      };\n\n    } catch (connectionError) {\n      setError('Failed to establish connection');\n      setIsConnected(false);\n    }\n  }, [url, options]);\n\n  const disconnect = useCallback(() => {\n    if (eventSourceRef.current) {\n      eventSourceRef.current.close();\n      eventSourceRef.current = null;\n      setIsConnected(false);\n    }\n  }, []);\n\n  const reset = useCallback(() => {\n    setData(null);\n    setError(null);\n    dataRef.current = {};\n  }, []);\n\n  useEffect(() => {\n    return () => {\n      disconnect();\n    };\n  }, [disconnect]);\n\n  return {\n    data,\n    error,\n    isConnected,\n    connect,\n    disconnect,\n    reset\n  };\n};"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,MAAM,EAAEC,WAAW,QAAQ,OAAO;AAEhE,OAAO,MAAMC,MAAM,GAAGA,CAACC,GAAG,EAAEC,OAAO,GAAG,CAAC,CAAC,KAAK;EAAAC,EAAA;EAC3C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAMc,cAAc,GAAGZ,MAAM,CAAC,IAAI,CAAC;EACnC,MAAMa,OAAO,GAAGb,MAAM,CAAC,CAAC,CAAC,CAAC;EAE1B,MAAMc,OAAO,GAAGb,WAAW,CAAC,MAAM;IAChC,IAAIW,cAAc,CAACG,OAAO,EAAE;MAC1BH,cAAc,CAACG,OAAO,CAACC,KAAK,CAAC,CAAC;IAChC;IAEA,IAAI;MACF,MAAMC,WAAW,GAAG,IAAIC,WAAW,CAACf,GAAG,CAAC;MACxCS,cAAc,CAACG,OAAO,GAAGE,WAAW;MAEpCA,WAAW,CAACE,MAAM,GAAG,MAAM;QACzBR,cAAc,CAAC,IAAI,CAAC;QACpBF,QAAQ,CAAC,IAAI,CAAC;QACd,IAAIL,OAAO,CAACgB,MAAM,EAAEhB,OAAO,CAACgB,MAAM,CAAC,CAAC;MACtC,CAAC;MAEDH,WAAW,CAACI,SAAS,GAAIC,KAAK,IAAK;QACjC,IAAI;UACF,MAAMC,UAAU,GAAGC,IAAI,CAACC,KAAK,CAACH,KAAK,CAAChB,IAAI,CAAC;UAEzC,IAAIF,OAAO,CAACsB,SAAS,EAAE;YACrBtB,OAAO,CAACsB,SAAS,CAACH,UAAU,CAAC;UAC/B;;UAEA;UACA,QAAQA,UAAU,CAACI,IAAI;YACrB,KAAK,UAAU;cACb,IAAIvB,OAAO,CAACwB,UAAU,EAAE;gBACtBxB,OAAO,CAACwB,UAAU,CAACL,UAAU,CAAC;cAChC;cACA;YAEF,KAAK,YAAY;cACfV,OAAO,CAACE,OAAO,CAACc,UAAU,GAAGN,UAAU,CAACjB,IAAI;cAC5CC,OAAO,CAAC;gBAAE,GAAGM,OAAO,CAACE;cAAQ,CAAC,CAAC;cAC/B;YAEF,KAAK,cAAc;cACjBF,OAAO,CAACE,OAAO,CAACe,YAAY,GAAGP,UAAU,CAACjB,IAAI;cAC9CC,OAAO,CAAC;gBAAE,GAAGM,OAAO,CAACE;cAAQ,CAAC,CAAC;cAC/B;YAEF,KAAK,eAAe;cAClBF,OAAO,CAACE,OAAO,CAACgB,aAAa,GAAGR,UAAU,CAACjB,IAAI;cAC/CC,OAAO,CAAC;gBAAE,GAAGM,OAAO,CAACE;cAAQ,CAAC,CAAC;cAC/B;YAEF,KAAK,eAAe;cAClB,IAAI,CAACF,OAAO,CAACE,OAAO,CAACiB,OAAO,EAAE;gBAC5BnB,OAAO,CAACE,OAAO,CAACiB,OAAO,GAAG,EAAE;cAC9B;cACAnB,OAAO,CAACE,OAAO,CAACiB,OAAO,GAAGnB,OAAO,CAACE,OAAO,CAACiB,OAAO,CAACC,MAAM,CAACV,UAAU,CAACjB,IAAI,CAAC;cACzEO,OAAO,CAACE,OAAO,CAACmB,aAAa,GAAGX,UAAU,CAACY,YAAY;cACvD5B,OAAO,CAAC;gBAAE,GAAGM,OAAO,CAACE;cAAQ,CAAC,CAAC;cAC/B;YAEF,KAAK,wBAAwB;cAC3B,IAAI,CAACF,OAAO,CAACE,OAAO,CAACqB,gBAAgB,EAAE;gBACrCvB,OAAO,CAACE,OAAO,CAACqB,gBAAgB,GAAG,EAAE;cACvC;cACAvB,OAAO,CAACE,OAAO,CAACqB,gBAAgB,GAAGvB,OAAO,CAACE,OAAO,CAACqB,gBAAgB,CAACH,MAAM,CAACV,UAAU,CAACjB,IAAI,CAAC;cAC3FO,OAAO,CAACE,OAAO,CAACsB,sBAAsB,GAAGd,UAAU,CAACY,YAAY;cAChE5B,OAAO,CAAC;gBAAE,GAAGM,OAAO,CAACE;cAAQ,CAAC,CAAC;cAC/B;YAEF,KAAK,mBAAmB;cACtBF,OAAO,CAACE,OAAO,CAACuB,QAAQ,GAAGf,UAAU,CAACjB,IAAI;cAC1CC,OAAO,CAAC;gBAAE,GAAGM,OAAO,CAACE;cAAQ,CAAC,CAAC;cAC/B,IAAIX,OAAO,CAACmC,UAAU,EAAE;gBACtBnC,OAAO,CAACmC,UAAU,CAAChB,UAAU,CAACjB,IAAI,CAAC;cACrC;cACA;YAEF,KAAK,OAAO;cACVG,QAAQ,CAACc,UAAU,CAACiB,OAAO,CAAC;cAC5B,IAAIpC,OAAO,CAACqC,OAAO,EAAE;gBACnBrC,OAAO,CAACqC,OAAO,CAAClB,UAAU,CAACiB,OAAO,CAAC;cACrC;cACA;YAEF;cACE;UACJ;QACF,CAAC,CAAC,OAAOE,UAAU,EAAE;UACnBC,OAAO,CAACnC,KAAK,CAAC,2BAA2B,EAAEkC,UAAU,CAAC;UACtDjC,QAAQ,CAAC,iCAAiC,CAAC;QAC7C;MACF,CAAC;MAEDQ,WAAW,CAAC2B,OAAO,GAAItB,KAAK,IAAK;QAC/BX,cAAc,CAAC,KAAK,CAAC;QACrBF,QAAQ,CAAC,2BAA2B,CAAC;QACrC,IAAIL,OAAO,CAACqC,OAAO,EAAE;UACnBrC,OAAO,CAACqC,OAAO,CAAC,2BAA2B,CAAC;QAC9C;MACF,CAAC;IAEH,CAAC,CAAC,OAAOI,eAAe,EAAE;MACxBpC,QAAQ,CAAC,gCAAgC,CAAC;MAC1CE,cAAc,CAAC,KAAK,CAAC;IACvB;EACF,CAAC,EAAE,CAACR,GAAG,EAAEC,OAAO,CAAC,CAAC;EAElB,MAAM0C,UAAU,GAAG7C,WAAW,CAAC,MAAM;IACnC,IAAIW,cAAc,CAACG,OAAO,EAAE;MAC1BH,cAAc,CAACG,OAAO,CAACC,KAAK,CAAC,CAAC;MAC9BJ,cAAc,CAACG,OAAO,GAAG,IAAI;MAC7BJ,cAAc,CAAC,KAAK,CAAC;IACvB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMoC,KAAK,GAAG9C,WAAW,CAAC,MAAM;IAC9BM,OAAO,CAAC,IAAI,CAAC;IACbE,QAAQ,CAAC,IAAI,CAAC;IACdI,OAAO,CAACE,OAAO,GAAG,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;EAENhB,SAAS,CAAC,MAAM;IACd,OAAO,MAAM;MACX+C,UAAU,CAAC,CAAC;IACd,CAAC;EACH,CAAC,EAAE,CAACA,UAAU,CAAC,CAAC;EAEhB,OAAO;IACLxC,IAAI;IACJE,KAAK;IACLE,WAAW;IACXI,OAAO;IACPgC,UAAU;IACVC;EACF,CAAC;AACH,CAAC;AAAC1C,EAAA,CAzIWH,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}